
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "content/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_content_examples_10-pgi_plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_content_examples_10-pgi_plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:


Petrophysically guided inversion: Joint linear example with nonlinear relationships
===================================================================================

We do a comparison between the classic least-squares inversion
and our formulation of a petrophysically guided inversion.
We explore it through coupling two linear problems whose respective physical
properties are linked by polynomial relationships that change between rock units.

.. GENERATED FROM PYTHON SOURCE LINES 11-432



.. image-sg:: /content/examples/10-pgi/images/sphx_glr_plot_inv_1_PGI_Linear_1D_joint_WithRelationships_001.png
   :alt: Problem 1, Problem 2, Petrophysical Distribution, Problem 1, Problem 2, Petrophysical Distribution, Problem 1, Problem 2, Petro Distribution
   :srcset: /content/examples/10-pgi/images/sphx_glr_plot_inv_1_PGI_Linear_1D_joint_WithRelationships_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Running inversion with SimPEG v0.21.2.dev45+g83183b481
    simpeg.InvProblem will set Regularization.reference_model to m0.
    simpeg.InvProblem will set Regularization.reference_model to m0.
    simpeg.InvProblem will set Regularization.reference_model to m0.

                        simpeg.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.
                        ***Done using the default solver Pardiso and no solver_opts.***
                    
    Alpha scales: [3.4981533271363108, 0.0, 3.507008421506134e-06, 0.0]
    Calculating the scaling parameter.
    Scale Multipliers:  [0.09221548 0.90778452]
    <class 'simpeg.regularization.pgi.PGIsmallness'>
    Initial data misfit scales:  [0.09221548 0.90778452]
    model has any nan: 0
    =============================== Projected GNCG ===============================
      #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   
    -----------------------------------------------------------------------------
    x0 has any nan: 0
       0  1.86e+01  3.00e+05  0.00e+00  3.00e+05    1.41e+02      0              
    geophys. misfits: 1059.8 (target 30.0 [False]); 60.4 (target 30.0 [False]) | smallness misfit: 2949.9 (target: 200.0 [False])
    Beta cooling evaluation: progress: [1059.8   60.4]; minimum progress targets: [240000. 240000.]
       1  1.86e+01  1.53e+02  4.14e+01  9.21e+02    7.81e+01      0              
    geophys. misfits: 479.2 (target 30.0 [False]); 12.9 (target 30.0 [True]) | smallness misfit: 1304.1 (target: 200.0 [False])
    Beta cooling evaluation: progress: [479.2  12.9]; minimum progress targets: [847.9  48.3]
    Updating scaling for data misfits by  2.3294896166085644
    New scales: [0.19135497 0.80864503]
       2  1.86e+01  1.02e+02  4.01e+01  8.46e+02    9.54e+01      0   Skip BFGS  
    geophys. misfits: 168.4 (target 30.0 [False]); 12.9 (target 30.0 [True]) | smallness misfit: 1156.5 (target: 200.0 [False])
    Beta cooling evaluation: progress: [168.4  12.9]; minimum progress targets: [383.4  30. ]
    Updating scaling for data misfits by  2.3330739302705785
    New scales: [0.35570771 0.64429229]
       3  1.86e+01  6.82e+01  4.22e+01  8.51e+02    8.22e+01      0              
    geophys. misfits: 72.4 (target 30.0 [False]); 13.6 (target 30.0 [True]) | smallness misfit: 1076.3 (target: 200.0 [False])
    Beta cooling evaluation: progress: [72.4 13.6]; minimum progress targets: [134.7  30. ]
    Updating scaling for data misfits by  2.213165866085375
    New scales: [0.54992826 0.45007174]
       4  1.86e+01  4.59e+01  4.34e+01  8.52e+02    8.36e+01      0   Skip BFGS  
    geophys. misfits: 42.1 (target 30.0 [False]); 16.1 (target 30.0 [True]) | smallness misfit: 1016.6 (target: 200.0 [False])
    Beta cooling evaluation: progress: [42.1 16.1]; minimum progress targets: [57.9 30. ]
    Updating scaling for data misfits by  1.8599467390461653
    New scales: [0.69443344 0.30556656]
       5  1.86e+01  3.42e+01  4.41e+01  8.52e+02    8.69e+01      0   Skip BFGS  
    geophys. misfits: 32.3 (target 30.0 [False]); 21.0 (target 30.0 [True]) | smallness misfit: 964.1 (target: 200.0 [False])
    Beta cooling evaluation: progress: [32.3 21. ]; minimum progress targets: [33.7 30. ]
    Updating scaling for data misfits by  1.426975075938374
    New scales: [0.76431531 0.23568469]
       6  1.86e+01  2.97e+01  4.43e+01  8.52e+02    6.67e+01      0   Skip BFGS  
    geophys. misfits: 29.2 (target 30.0 [True]); 26.3 (target 30.0 [True]) | smallness misfit: 927.9 (target: 200.0 [False])
    Beta cooling evaluation: progress: [29.2 26.3]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  1.0836282954053322
       7  1.86e+01  2.85e+01  4.45e+01  8.55e+02    4.44e+01      0   Skip BFGS  
    geophys. misfits: 29.0 (target 30.0 [True]); 28.3 (target 30.0 [True]) | smallness misfit: 907.3 (target: 200.0 [False])
    Beta cooling evaluation: progress: [29.  28.3]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  1.1354174268686075
       8  1.86e+01  2.88e+01  4.46e+01  8.57e+02    3.34e+01      0   Skip BFGS  
    geophys. misfits: 28.8 (target 30.0 [True]); 30.0 (target 30.0 [True]) | smallness misfit: 893.3 (target: 200.0 [False])
    Beta cooling evaluation: progress: [28.8 30. ]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  1.1598152201319334
       9  1.86e+01  2.91e+01  4.46e+01  8.58e+02    5.75e+01      0   Skip BFGS  
    geophys. misfits: 28.9 (target 30.0 [True]); 29.9 (target 30.0 [True]) | smallness misfit: 892.0 (target: 200.0 [False])
    Beta cooling evaluation: progress: [28.9 29.9]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  1.1839788275699756
      10  1.86e+01  2.91e+01  4.47e+01  8.59e+02    5.21e+01      0              
    geophys. misfits: 28.8 (target 30.0 [True]); 30.6 (target 30.0 [False]) | smallness misfit: 885.0 (target: 200.0 [False])
    Beta cooling evaluation: progress: [28.8 30.6]; minimum progress targets: [30. 30.]
    Decreasing beta to counter data misfit increase.
    Updating scaling for data misfits by  1.0409492376799667
    New scales: [0.75700933 0.24299067]
      11  9.28e+00  2.92e+01  4.47e+01  4.44e+02    8.81e+01      0              
    geophys. misfits: 15.4 (target 30.0 [True]); 18.1 (target 30.0 [True]) | smallness misfit: 928.2 (target: 200.0 [False])
    Beta cooling evaluation: progress: [15.4 18.1]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  2.135499906805038
      12  9.28e+00  1.60e+01  4.76e+01  4.58e+02    7.06e+01      0              
    geophys. misfits: 15.3 (target 30.0 [True]); 24.0 (target 30.0 [True]) | smallness misfit: 808.2 (target: 200.0 [False])
    Beta cooling evaluation: progress: [15.3 24. ]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  3.4230720130225083
      13  9.28e+00  1.74e+01  4.97e+01  4.79e+02    8.09e+01      0              
    geophys. misfits: 15.3 (target 30.0 [True]); 34.4 (target 30.0 [False]) | smallness misfit: 680.3 (target: 200.0 [False])
    Beta cooling evaluation: progress: [15.3 34.4]; minimum progress targets: [30. 30.]
    Decreasing beta to counter data misfit increase.
    Updating scaling for data misfits by  1.9668142255800392
    New scales: [0.61299934 0.38700066]
      14  4.64e+00  2.27e+01  4.93e+01  2.51e+02    9.72e+01      0              
    geophys. misfits: 11.4 (target 30.0 [True]); 14.2 (target 30.0 [True]) | smallness misfit: 770.9 (target: 200.0 [False])
    Beta cooling evaluation: progress: [11.4 14.2]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  8.093764708340194
      15  4.64e+00  1.25e+01  5.86e+01  2.85e+02    8.83e+01      0              
    geophys. misfits: 11.8 (target 30.0 [True]); 20.2 (target 30.0 [True]) | smallness misfit: 580.2 (target: 200.0 [False])
    Beta cooling evaluation: progress: [11.8 20.2]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  16.309260056989814
      16  4.64e+00  1.50e+01  6.78e+01  3.30e+02    1.07e+02      0              
    geophys. misfits: 12.3 (target 30.0 [True]); 16.0 (target 30.0 [True]) | smallness misfit: 499.7 (target: 200.0 [False])
    Beta cooling evaluation: progress: [12.3 16. ]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  35.20917204721112
      17  4.64e+00  1.37e+01  8.79e+01  4.22e+02    1.18e+02      0              
    geophys. misfits: 12.1 (target 30.0 [True]); 21.4 (target 30.0 [True]) | smallness misfit: 366.2 (target: 200.0 [False])
    Beta cooling evaluation: progress: [12.1 21.4]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  68.34758340906178
      18  4.64e+00  1.57e+01  1.11e+02  5.33e+02    1.32e+02      0              
    geophys. misfits: 13.5 (target 30.0 [True]); 29.7 (target 30.0 [True]) | smallness misfit: 302.3 (target: 200.0 [False])
    Beta cooling evaluation: progress: [13.5 29.7]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  110.76391962600975
      19  4.64e+00  1.97e+01  1.31e+02  6.30e+02    1.31e+02      1              
    geophys. misfits: 27.8 (target 30.0 [True]); 70.0 (target 30.0 [False]) | smallness misfit: 242.1 (target: 200.0 [False])
    Beta cooling evaluation: progress: [27.8 70. ]; minimum progress targets: [30. 30.]
    Decreasing beta to counter data misfit increase.
    Updating scaling for data misfits by  1.0796246870107824
    New scales: [0.59467456 0.40532544]
      20  2.32e+00  4.49e+01  1.21e+02  3.26e+02    1.23e+02      0              
    geophys. misfits: 18.7 (target 30.0 [True]); 48.1 (target 30.0 [False]) | smallness misfit: 190.6 (target: 200.0 [True])
    Beta cooling evaluation: progress: [18.7 48.1]; minimum progress targets: [30. 56.]
    Decreasing beta to counter data misfit increase.
    Updating scaling for data misfits by  1.6042044382233143
    New scales: [0.47768884 0.52231116]
      21  1.16e+00  3.40e+01  1.10e+02  1.62e+02    1.15e+02      1              
    geophys. misfits: 14.6 (target 30.0 [True]); 30.5 (target 30.0 [False]) | smallness misfit: 188.0 (target: 200.0 [True])
    Beta cooling evaluation: progress: [14.6 30.5]; minimum progress targets: [30.  38.5]
    Decreasing beta to counter data misfit increase.
    Updating scaling for data misfits by  2.0562620854634086
    New scales: [0.30784921 0.69215079]
      22  5.80e-01  2.56e+01  1.15e+02  9.22e+01    9.81e+01      0              
    geophys. misfits: 14.2 (target 30.0 [True]); 14.9 (target 30.0 [True]) | smallness misfit: 207.0 (target: 200.0 [False])
    Beta cooling evaluation: progress: [14.2 14.9]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  228.8822475177743
      23  5.80e-01  1.47e+01  1.78e+02  1.18e+02    1.05e+02      0              
    geophys. misfits: 22.8 (target 30.0 [True]); 17.0 (target 30.0 [True]) | smallness misfit: 172.5 (target: 200.0 [True])
    All targets have been reached
    Beta cooling evaluation: progress: [22.8 17. ]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  353.2518744292698
    ------------------------- STOP! -------------------------
    1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 3.0000e+04
    0 : |xc-x_last| = 6.5344e-01 <= tolX*(1+|x0|) = 1.0000e-06
    0 : |proj(x-g)-x|    = 1.0481e+02 <= tolG          = 1.0000e-01
    0 : |proj(x-g)-x|    = 1.0481e+02 <= 1e3*eps       = 1.0000e-02
    0 : maxIter   =      50    <= iter          =     24
    ------------------------- DONE! -------------------------

    Running inversion with SimPEG v0.21.2.dev45+g83183b481
    simpeg.InvProblem will set Regularization.reference_model to m0.
    simpeg.InvProblem will set Regularization.reference_model to m0.
    simpeg.InvProblem will set Regularization.reference_model to m0.

                        simpeg.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.
                        ***Done using the default solver Pardiso and no solver_opts.***
                    
    Alpha scales: [0.0003453091364221286, 0.0, 3.4530303439878364e-06, 0.0]
    Calculating the scaling parameter.
    Scale Multipliers:  [0.09221548 0.90778452]
    <class 'simpeg.regularization.pgi.PGIsmallness'>
    Initial data misfit scales:  [0.09221548 0.90778452]
    model has any nan: 0
    =============================== Projected GNCG ===============================
      #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   
    -----------------------------------------------------------------------------
    x0 has any nan: 0
       0  1.90e+03  3.00e+05  0.00e+00  3.00e+05    1.41e+02      0              
    geophys. misfits: 89401.9 (target 30.0 [False]); 61555.5 (target 30.0 [False]) | smallness misfit: 275.1 (target: 200.0 [False])
    Beta cooling evaluation: progress: [89401.9 61555.5]; minimum progress targets: [240000. 240000.]
       1  1.90e+03  6.41e+04  6.70e-01  6.54e+04    9.27e+01      0              
    geophys. misfits: 655.3 (target 30.0 [False]); 18.5 (target 30.0 [True]) | smallness misfit: 115.1 (target: 200.0 [True])
    Beta cooling evaluation: progress: [655.3  18.5]; minimum progress targets: [71521.5 49244.4]
    Updating scaling for data misfits by  1.6225984542814922
    New scales: [0.14150447 0.85849553]
       2  1.90e+03  1.09e+02  3.27e-01  7.28e+02    1.10e+02      0   Skip BFGS  
    geophys. misfits: 69.6 (target 30.0 [False]); 20.4 (target 30.0 [True]) | smallness misfit: 48.7 (target: 200.0 [True])
    Beta cooling evaluation: progress: [69.6 20.4]; minimum progress targets: [524.2  30. ]
    Updating scaling for data misfits by  1.4720180587192944
    New scales: [0.1952555 0.8047445]
       3  1.90e+03  3.00e+01  1.30e-01  2.77e+02    8.40e+01      0   Skip BFGS  
    geophys. misfits: 46.0 (target 30.0 [False]); 19.0 (target 30.0 [True]) | smallness misfit: 60.3 (target: 200.0 [True])
    Beta cooling evaluation: progress: [46. 19.]; minimum progress targets: [55.6 30. ]
    Updating scaling for data misfits by  1.5752821900712228
    New scales: [0.27652166 0.72347834]
       4  1.90e+03  2.65e+01  1.50e-01  3.11e+02    9.31e+01      0   Skip BFGS  
    geophys. misfits: 29.7 (target 30.0 [True]); 20.0 (target 30.0 [True]) | smallness misfit: 47.9 (target: 200.0 [True])
    All targets have been reached
    Beta cooling evaluation: progress: [29.7 20. ]; minimum progress targets: [36.8 30. ]
    Warming alpha_pgi to favor clustering:  1.2560935829950621
    ------------------------- STOP! -------------------------
    1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 3.0000e+04
    0 : |xc-x_last| = 1.4049e-01 <= tolX*(1+|x0|) = 1.0000e-06
    0 : |proj(x-g)-x|    = 9.3089e+01 <= tolG          = 1.0000e-01
    0 : |proj(x-g)-x|    = 9.3089e+01 <= 1e3*eps       = 1.0000e-02
    0 : maxIter   =      50    <= iter          =      5
    ------------------------- DONE! -------------------------

    Running inversion with SimPEG v0.21.2.dev45+g83183b481
    simpeg.InvProblem will set Regularization.reference_model to m0.
    simpeg.InvProblem will set Regularization.reference_model to m0.

                        simpeg.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.
                        ***Done using the default solver Pardiso and no solver_opts.***
                    
    Alpha scales: [3.503203466673954e-05, 0.0, 3.489724703917051e-05, 0.0]
    Calculating the scaling parameter.
    Scale Multipliers:  [0.09221548 0.90778452]
    /home/vsts/work/1/s/simpeg/directives/directives.py:334: UserWarning:

    There is no PGI regularization. Smallness target is turned off (TriggerSmall flag)

    Initial data misfit scales:  [0.09221548 0.90778452]
    model has any nan: 0
    =============================== Projected GNCG ===============================
      #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   
    -----------------------------------------------------------------------------
    x0 has any nan: 0
       0  1.01e+06  3.00e+05  0.00e+00  3.00e+05    1.41e+02      0              
    geophys. misfits: 56947.9 (target 30.0 [False]); 34623.8 (target 30.0 [False])
       1  2.02e+05  3.67e+04  4.38e-02  4.55e+04    1.38e+02      0              
    geophys. misfits: 8512.8 (target 30.0 [False]); 3647.3 (target 30.0 [False])
       2  4.04e+04  4.10e+03  1.08e-01  8.45e+03    1.30e+02      0   Skip BFGS  
    geophys. misfits: 570.0 (target 30.0 [False]); 221.0 (target 30.0 [False])
       3  8.09e+03  2.53e+02  1.41e-01  1.40e+03    1.01e+02      0   Skip BFGS  
    geophys. misfits: 38.3 (target 30.0 [False]); 21.6 (target 30.0 [True])
    Updating scaling for data misfits by  1.3879966931678551
    New scales: [0.12357341 0.87642659]
       4  1.62e+03  2.37e+01  1.51e-01  2.68e+02    7.83e+01      0   Skip BFGS  
    geophys. misfits: 9.3 (target 30.0 [True]); 10.8 (target 30.0 [True])
    All targets have been reached
    ------------------------- STOP! -------------------------
    1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 3.0000e+04
    0 : |xc-x_last| = 2.6911e-01 <= tolX*(1+|x0|) = 1.0000e-06
    0 : |proj(x-g)-x|    = 7.8217e+01 <= tolG          = 1.0000e-01
    0 : |proj(x-g)-x|    = 7.8217e+01 <= 1e3*eps       = 1.0000e-02
    0 : maxIter   =      50    <= iter          =      5
    ------------------------- DONE! -------------------------
    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:301: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "b.-" (-> marker='.'). The keyword argument will take precedence.

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:308: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "r.-" (-> marker='.'). The keyword argument will take precedence.

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:346: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "b.-" (-> marker='.'). The keyword argument will take precedence.

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:353: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "r.-" (-> marker='.'). The keyword argument will take precedence.

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:360: UserWarning:

    The following kwargs were not used by contour: 'label'

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:368: UserWarning:

    The following kwargs were not used by contour: 'label'

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:402: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "b.-" (-> marker='.'). The keyword argument will take precedence.

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:409: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "r.-" (-> marker='.'). The keyword argument will take precedence.







|

.. code-block:: Python


    import discretize as Mesh
    import matplotlib.pyplot as plt
    import numpy as np
    from simpeg import (
        data_misfit,
        directives,
        inverse_problem,
        inversion,
        maps,
        optimization,
        regularization,
        simulation,
        utils,
    )

    # Random seed for reproductibility
    np.random.seed(1)
    # Mesh
    N = 100
    mesh = Mesh.TensorMesh([N])

    # Survey design parameters
    nk = 30
    jk = np.linspace(1.0, 59.0, nk)
    p = -0.25
    q = 0.25


    # Physics
    def g(k):
        return np.exp(p * jk[k] * mesh.cell_centers_x) * np.cos(
            np.pi * q * jk[k] * mesh.cell_centers_x
        )


    G = np.empty((nk, mesh.nC))

    for i in range(nk):
        G[i, :] = g(i)

    m0 = np.zeros(mesh.nC)
    m0[20:41] = np.linspace(0.0, 1.0, 21)
    m0[41:57] = np.linspace(-1, 0.0, 16)

    poly0 = maps.PolynomialPetroClusterMap(coeffyx=np.r_[0.0, -4.0, 4.0])
    poly1 = maps.PolynomialPetroClusterMap(coeffyx=np.r_[-0.0, 3.0, 6.0, 6.0])
    poly0_inverse = maps.PolynomialPetroClusterMap(coeffyx=-np.r_[0.0, -4.0, 4.0])
    poly1_inverse = maps.PolynomialPetroClusterMap(coeffyx=-np.r_[0.0, 3.0, 6.0, 6.0])
    cluster_mapping = [maps.IdentityMap(), poly0_inverse, poly1_inverse]

    m1 = np.zeros(100)
    m1[20:41] = 1.0 + (poly0 * np.vstack([m0[20:41], m1[20:41]]).T)[:, 1]
    m1[41:57] = -1.0 + (poly1 * np.vstack([m0[41:57], m1[41:57]]).T)[:, 1]

    model2d = np.vstack([m0, m1]).T
    m = utils.mkvc(model2d)

    clfmapping = utils.GaussianMixtureWithNonlinearRelationships(
        mesh=mesh,
        n_components=3,
        covariance_type="full",
        tol=1e-8,
        reg_covar=1e-3,
        max_iter=1000,
        n_init=100,
        init_params="kmeans",
        random_state=None,
        warm_start=False,
        means_init=np.array(
            [
                [0, 0],
                [m0[20:41].mean(), m1[20:41].mean()],
                [m0[41:57].mean(), m1[41:57].mean()],
            ]
        ),
        verbose=0,
        verbose_interval=10,
        cluster_mapping=cluster_mapping,
    )
    clfmapping = clfmapping.fit(model2d)

    clfnomapping = utils.WeightedGaussianMixture(
        mesh=mesh,
        n_components=3,
        covariance_type="full",
        tol=1e-8,
        reg_covar=1e-3,
        max_iter=1000,
        n_init=100,
        init_params="kmeans",
        random_state=None,
        warm_start=False,
        verbose=0,
        verbose_interval=10,
    )
    clfnomapping = clfnomapping.fit(model2d)

    wires = maps.Wires(("m1", mesh.nC), ("m2", mesh.nC))

    relatrive_error = 0.01
    noise_floor = 0.0

    prob1 = simulation.LinearSimulation(mesh, G=G, model_map=wires.m1)
    survey1 = prob1.make_synthetic_data(
        m, relative_error=relatrive_error, noise_floor=noise_floor, add_noise=True
    )

    prob2 = simulation.LinearSimulation(mesh, G=G, model_map=wires.m2)
    survey2 = prob2.make_synthetic_data(
        m, relative_error=relatrive_error, noise_floor=noise_floor, add_noise=True
    )


    dmis1 = data_misfit.L2DataMisfit(simulation=prob1, data=survey1)
    dmis2 = data_misfit.L2DataMisfit(simulation=prob2, data=survey2)
    dmis = dmis1 + dmis2
    minit = np.zeros_like(m)

    # Distance weighting
    wr1 = np.sum(prob1.G**2.0, axis=0) ** 0.5 / mesh.cell_volumes
    wr1 = wr1 / np.max(wr1)
    wr2 = np.sum(prob2.G**2.0, axis=0) ** 0.5 / mesh.cell_volumes
    wr2 = wr2 / np.max(wr2)

    reg_simple = regularization.PGI(
        mesh=mesh,
        gmmref=clfmapping,
        gmm=clfmapping,
        approx_gradient=True,
        wiresmap=wires,
        non_linear_relationships=True,
        weights_list=[wr1, wr2],
    )

    opt = optimization.ProjectedGNCG(
        maxIter=50,
        tolX=1e-6,
        maxIterCG=100,
        tolCG=1e-3,
        lower=-10,
        upper=10,
    )

    invProb = inverse_problem.BaseInvProblem(dmis, reg_simple, opt)

    # directives
    scales = directives.ScalingMultipleDataMisfits_ByEig(
        chi0_ratio=np.r_[1.0, 1.0], verbose=True, n_pw_iter=10
    )
    scaling_schedule = directives.JointScalingSchedule(verbose=True)
    alpha0_ratio = np.r_[1e6, 1e4, 1, 1]
    alphas = directives.AlphasSmoothEstimate_ByEig(
        alpha0_ratio=alpha0_ratio, n_pw_iter=10, verbose=True
    )
    beta = directives.BetaEstimate_ByEig(beta0_ratio=1e-5, n_pw_iter=10)
    betaIt = directives.PGI_BetaAlphaSchedule(
        verbose=True,
        coolingFactor=2.0,
        progress=0.2,
    )
    targets = directives.MultiTargetMisfits(verbose=True)
    petrodir = directives.PGI_UpdateParameters(update_gmm=False)

    # Setup Inversion
    inv = inversion.BaseInversion(
        invProb,
        directiveList=[alphas, scales, beta, petrodir, targets, betaIt, scaling_schedule],
    )

    mcluster_map = inv.run(minit)

    # Inversion with no nonlinear mapping
    reg_simple_no_map = regularization.PGI(
        mesh=mesh,
        gmmref=clfnomapping,
        gmm=clfnomapping,
        approx_gradient=True,
        wiresmap=wires,
        non_linear_relationships=False,
        weights_list=[wr1, wr2],
    )

    opt = optimization.ProjectedGNCG(
        maxIter=50,
        tolX=1e-6,
        maxIterCG=100,
        tolCG=1e-3,
        lower=-10,
        upper=10,
    )

    invProb = inverse_problem.BaseInvProblem(dmis, reg_simple_no_map, opt)

    # directives
    scales = directives.ScalingMultipleDataMisfits_ByEig(
        chi0_ratio=np.r_[1.0, 1.0], verbose=True, n_pw_iter=10
    )
    scaling_schedule = directives.JointScalingSchedule(verbose=True)
    alpha0_ratio = np.r_[100.0 * np.ones(2), 1, 1]
    alphas = directives.AlphasSmoothEstimate_ByEig(
        alpha0_ratio=alpha0_ratio, n_pw_iter=10, verbose=True
    )
    beta = directives.BetaEstimate_ByEig(beta0_ratio=1e-5, n_pw_iter=10)
    betaIt = directives.PGI_BetaAlphaSchedule(
        verbose=True,
        coolingFactor=2.0,
        progress=0.2,
    )
    targets = directives.MultiTargetMisfits(
        chiSmall=1.0, TriggerSmall=True, TriggerTheta=False, verbose=True
    )
    petrodir = directives.PGI_UpdateParameters(update_gmm=False)

    # Setup Inversion
    inv = inversion.BaseInversion(
        invProb,
        directiveList=[alphas, scales, beta, petrodir, targets, betaIt, scaling_schedule],
    )

    mcluster_no_map = inv.run(minit)

    # WeightedLeastSquares Inversion

    reg1 = regularization.WeightedLeastSquares(
        mesh, alpha_s=1.0, alpha_x=1.0, mapping=wires.m1, weights={"cell_weights": wr1}
    )

    reg2 = regularization.WeightedLeastSquares(
        mesh, alpha_s=1.0, alpha_x=1.0, mapping=wires.m2, weights={"cell_weights": wr2}
    )

    reg = reg1 + reg2

    opt = optimization.ProjectedGNCG(
        maxIter=50,
        tolX=1e-6,
        maxIterCG=100,
        tolCG=1e-3,
        lower=-10,
        upper=10,
    )

    invProb = inverse_problem.BaseInvProblem(dmis, reg, opt)

    # directives
    alpha0_ratio = np.r_[1, 1, 1, 1]
    alphas = directives.AlphasSmoothEstimate_ByEig(
        alpha0_ratio=alpha0_ratio, n_pw_iter=10, verbose=True
    )
    scales = directives.ScalingMultipleDataMisfits_ByEig(
        chi0_ratio=np.r_[1.0, 1.0], verbose=True, n_pw_iter=10
    )
    scaling_schedule = directives.JointScalingSchedule(verbose=True)
    beta = directives.BetaEstimate_ByEig(beta0_ratio=1e-5, n_pw_iter=10)
    beta_schedule = directives.BetaSchedule(coolingFactor=5.0, coolingRate=1)
    targets = directives.MultiTargetMisfits(
        TriggerSmall=False,
        verbose=True,
    )

    # Setup Inversion
    inv = inversion.BaseInversion(
        invProb,
        directiveList=[alphas, scales, beta, targets, beta_schedule, scaling_schedule],
    )

    mtik = inv.run(minit)


    # Final Plot
    fig, axes = plt.subplots(3, 4, figsize=(25, 15))
    axes = axes.reshape(12)
    left, width = 0.25, 0.5
    bottom, height = 0.25, 0.5
    right = left + width
    top = bottom + height

    axes[0].set_axis_off()
    axes[0].text(
        0.5 * (left + right),
        0.5 * (bottom + top),
        ("Using true nonlinear\npetrophysical relationships"),
        horizontalalignment="center",
        verticalalignment="center",
        fontsize=20,
        color="black",
        transform=axes[0].transAxes,
    )

    axes[1].plot(mesh.cell_centers_x, wires.m1 * mcluster_map, "b.-", ms=5, marker="v")
    axes[1].plot(mesh.cell_centers_x, wires.m1 * m, "k--")
    axes[1].set_title("Problem 1")
    axes[1].legend(["Recovered Model", "True Model"], loc=1)
    axes[1].set_xlabel("X")
    axes[1].set_ylabel("Property 1")

    axes[2].plot(mesh.cell_centers_x, wires.m2 * mcluster_map, "r.-", ms=5, marker="v")
    axes[2].plot(mesh.cell_centers_x, wires.m2 * m, "k--")
    axes[2].set_title("Problem 2")
    axes[2].legend(["Recovered Model", "True Model"], loc=1)
    axes[2].set_xlabel("X")
    axes[2].set_ylabel("Property 2")

    x, y = np.mgrid[-1:1:0.01, -4:2:0.01]
    pos = np.empty(x.shape + (2,))
    pos[:, :, 0] = x
    pos[:, :, 1] = y
    CS = axes[3].contour(
        x,
        y,
        np.exp(clfmapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        100,
        alpha=0.25,
        cmap="viridis",
    )
    axes[3].scatter(wires.m1 * mcluster_map, wires.m2 * mcluster_map, marker="v")
    axes[3].set_title("Petrophysical Distribution")
    CS.collections[0].set_label("")
    axes[3].legend(["True Petrophysical Distribution", "Recovered model crossplot"])
    axes[3].set_xlabel("Property 1")
    axes[3].set_ylabel("Property 2")

    axes[4].set_axis_off()
    axes[4].text(
        0.5 * (left + right),
        0.5 * (bottom + top),
        ("Using a pure\nGaussian distribution"),
        horizontalalignment="center",
        verticalalignment="center",
        fontsize=20,
        color="black",
        transform=axes[4].transAxes,
    )

    axes[5].plot(mesh.cell_centers_x, wires.m1 * mcluster_no_map, "b.-", ms=5, marker="v")
    axes[5].plot(mesh.cell_centers_x, wires.m1 * m, "k--")
    axes[5].set_title("Problem 1")
    axes[5].legend(["Recovered Model", "True Model"], loc=1)
    axes[5].set_xlabel("X")
    axes[5].set_ylabel("Property 1")

    axes[6].plot(mesh.cell_centers_x, wires.m2 * mcluster_no_map, "r.-", ms=5, marker="v")
    axes[6].plot(mesh.cell_centers_x, wires.m2 * m, "k--")
    axes[6].set_title("Problem 2")
    axes[6].legend(["Recovered Model", "True Model"], loc=1)
    axes[6].set_xlabel("X")
    axes[6].set_ylabel("Property 2")

    CSF = axes[7].contour(
        x,
        y,
        np.exp(clfmapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        100,
        alpha=0.5,
        label="True Petro. Distribution",
    )
    CS = axes[7].contour(
        x,
        y,
        np.exp(clfnomapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        500,
        cmap="viridis",
        linestyles="--",
        label="Modeled Petro. Distribution",
    )
    axes[7].scatter(
        wires.m1 * mcluster_no_map,
        wires.m2 * mcluster_no_map,
        marker="v",
        label="Recovered model crossplot",
    )
    axes[7].set_title("Petrophysical Distribution")
    axes[7].legend()
    axes[7].set_xlabel("Property 1")
    axes[7].set_ylabel("Property 2")

    # Tikonov

    axes[8].set_axis_off()
    axes[8].text(
        0.5 * (left + right),
        0.5 * (bottom + top),
        ("Least-Squares\n~Using a single cluster"),
        horizontalalignment="center",
        verticalalignment="center",
        fontsize=20,
        color="black",
        transform=axes[8].transAxes,
    )

    axes[9].plot(mesh.cell_centers_x, wires.m1 * mtik, "b.-", ms=5, marker="v")
    axes[9].plot(mesh.cell_centers_x, wires.m1 * m, "k--")
    axes[9].set_title("Problem 1")
    axes[9].legend(["Recovered Model", "True Model"], loc=1)
    axes[9].set_xlabel("X")
    axes[9].set_ylabel("Property 1")

    axes[10].plot(mesh.cell_centers_x, wires.m2 * mtik, "r.-", ms=5, marker="v")
    axes[10].plot(mesh.cell_centers_x, wires.m2 * m, "k--")
    axes[10].set_title("Problem 2")
    axes[10].legend(["Recovered Model", "True Model"], loc=1)
    axes[10].set_xlabel("X")
    axes[10].set_ylabel("Property 2")

    CS = axes[11].contour(
        x,
        y,
        np.exp(clfmapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        100,
        alpha=0.25,
        cmap="viridis",
    )
    axes[11].scatter(wires.m1 * mtik, wires.m2 * mtik, marker="v")
    axes[11].set_title("Petro Distribution")
    CS.collections[0].set_label("")
    axes[11].legend(["True Petro Distribution", "Recovered model crossplot"])
    axes[11].set_xlabel("Property 1")
    axes[11].set_ylabel("Property 2")
    plt.subplots_adjust(wspace=0.3, hspace=0.3, top=0.85)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 27.075 seconds)

**Estimated memory usage:**  9 MB


.. _sphx_glr_download_content_examples_10-pgi_plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_inv_1_PGI_Linear_1D_joint_WithRelationships.ipynb <plot_inv_1_PGI_Linear_1D_joint_WithRelationships.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py <plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
