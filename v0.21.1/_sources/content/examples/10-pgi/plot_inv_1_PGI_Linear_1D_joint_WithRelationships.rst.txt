
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "content/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_content_examples_10-pgi_plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_content_examples_10-pgi_plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:


Petrophysically guided inversion: Joint linear example with nonlinear relationships
===================================================================================

We do a comparison between the classic least-squares inversion
and our formulation of a petrophysically guided inversion.
We explore it through coupling two linear problems whose respective physical
properties are linked by polynomial relationships that change between rock units.

.. GENERATED FROM PYTHON SOURCE LINES 11-432



.. image-sg:: /content/examples/10-pgi/images/sphx_glr_plot_inv_1_PGI_Linear_1D_joint_WithRelationships_001.png
   :alt: Problem 1, Problem 2, Petrophysical Distribution, Problem 1, Problem 2, Petrophysical Distribution, Problem 1, Problem 2, Petro Distribution
   :srcset: /content/examples/10-pgi/images/sphx_glr_plot_inv_1_PGI_Linear_1D_joint_WithRelationships_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    SimPEG.InvProblem will set Regularization.reference_model to m0.
    SimPEG.InvProblem will set Regularization.reference_model to m0.
    SimPEG.InvProblem will set Regularization.reference_model to m0.

                        SimPEG.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.
                        ***Done using the default solver Pardiso and no solver_opts.***
                    
    Alpha scales: [3.466585984471505, 0.0, 3.497667477042771e-06, 0.0]
    Calculating the scaling parameter.
    Scale Multipliers:  [0.09298509 0.90701491]
    <class 'SimPEG.regularization.pgi.PGIsmallness'>
    Initial data misfit scales:  [0.09298509 0.90701491]
    model has any nan: 0
    =============================== Projected GNCG ===============================
      #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   
    -----------------------------------------------------------------------------
    x0 has any nan: 0
       0  1.93e+01  3.00e+05  0.00e+00  3.00e+05    1.41e+02      0              
    geophys. misfits: 1108.9 (target 30.0 [False]); 83.1 (target 30.0 [False]) | smallness misfit: 2998.3 (target: 200.0 [False])
    Beta cooling evaluation: progress: [1108.9   83.1]; minimum progress targets: [240000. 240000.]
       1  1.93e+01  1.78e+02  4.09e+01  9.68e+02    8.39e+01      0              
    geophys. misfits: 488.7 (target 30.0 [False]); 26.8 (target 30.0 [True]) | smallness misfit: 1356.6 (target: 200.0 [False])
    Beta cooling evaluation: progress: [488.7  26.8]; minimum progress targets: [887.1  66.5]
    Updating scaling for data misfits by  1.1180633075907926
    New scales: [0.10283429 0.89716571]
       2  1.93e+01  7.43e+01  3.98e+01  8.42e+02    6.21e+01      0   Skip BFGS  
    geophys. misfits: 417.7 (target 30.0 [False]); 26.5 (target 30.0 [True]) | smallness misfit: 1316.0 (target: 200.0 [False])
    Beta cooling evaluation: progress: [417.7  26.5]; minimum progress targets: [391.  30.]
    Decreasing beta to counter data misfit decrase plateau.
    Updating scaling for data misfits by  1.1314753023745852
    New scales: [0.11480231 0.88519769]
       3  9.65e+00  7.14e+01  4.01e+01  4.59e+02    8.58e+01      0   Skip BFGS  
    geophys. misfits: 133.4 (target 30.0 [False]); 21.0 (target 30.0 [True]) | smallness misfit: 1339.7 (target: 200.0 [False])
    Beta cooling evaluation: progress: [133.4  21. ]; minimum progress targets: [334.2  30. ]
    Updating scaling for data misfits by  1.4296465097664488
    New scales: [0.1564118 0.8435882]
       4  9.65e+00  3.86e+01  4.26e+01  4.50e+02    6.80e+01      0              
    geophys. misfits: 99.8 (target 30.0 [False]); 21.7 (target 30.0 [True]) | smallness misfit: 1258.1 (target: 200.0 [False])
    Beta cooling evaluation: progress: [99.8 21.7]; minimum progress targets: [106.7  30. ]
    Updating scaling for data misfits by  1.3807214757469528
    New scales: [0.20382357 0.79617643]
       5  9.65e+00  3.76e+01  4.30e+01  4.53e+02    6.81e+01      0   Skip BFGS  
    geophys. misfits: 64.6 (target 30.0 [False]); 21.5 (target 30.0 [True]) | smallness misfit: 1227.3 (target: 200.0 [False])
    Beta cooling evaluation: progress: [64.6 21.5]; minimum progress targets: [79.8 30. ]
    Updating scaling for data misfits by  1.3940693474569692
    New scales: [0.26301839 0.73698161]
       6  9.65e+00  3.29e+01  4.36e+01  4.54e+02    6.45e+01      0              
    geophys. misfits: 47.2 (target 30.0 [False]); 21.6 (target 30.0 [True]) | smallness misfit: 1200.7 (target: 200.0 [False])
    Beta cooling evaluation: progress: [47.2 21.6]; minimum progress targets: [51.7 30. ]
    Updating scaling for data misfits by  1.3885631444826607
    New scales: [0.33135356 0.66864644]
       7  9.65e+00  3.01e+01  4.40e+01  4.55e+02    8.07e+01      0   Skip BFGS  
    geophys. misfits: 38.6 (target 30.0 [False]); 22.3 (target 30.0 [True]) | smallness misfit: 1166.6 (target: 200.0 [False])
    Beta cooling evaluation: progress: [38.6 22.3]; minimum progress targets: [37.8 30. ]
    Decreasing beta to counter data misfit decrase plateau.
    Updating scaling for data misfits by  1.3425988718834716
    New scales: [0.39952078 0.60047922]
       8  4.83e+00  2.89e+01  4.42e+01  2.42e+02    7.55e+01      0              
    geophys. misfits: 21.8 (target 30.0 [True]); 19.9 (target 30.0 [True]) | smallness misfit: 1230.3 (target: 200.0 [False])
    Beta cooling evaluation: progress: [21.8 19.9]; minimum progress targets: [30.9 30. ]
    Warming alpha_pgi to favor clustering:  1.443878078741625
       9  4.83e+00  2.06e+01  4.65e+01  2.45e+02    5.07e+01      0              
    geophys. misfits: 21.4 (target 30.0 [True]); 20.9 (target 30.0 [True]) | smallness misfit: 1101.7 (target: 200.0 [False])
    Beta cooling evaluation: progress: [21.4 20.9]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  2.0496019155058085
      10  4.83e+00  2.11e+01  4.77e+01  2.51e+02    4.90e+01      0              
    geophys. misfits: 19.9 (target 30.0 [True]); 21.7 (target 30.0 [True]) | smallness misfit: 992.1 (target: 200.0 [False])
    Beta cooling evaluation: progress: [19.9 21.7]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  2.962166093627672
      11  4.83e+00  2.10e+01  4.95e+01  2.60e+02    4.69e+01      0              
    geophys. misfits: 19.0 (target 30.0 [True]); 22.9 (target 30.0 [True]) | smallness misfit: 872.4 (target: 200.0 [False])
    Beta cooling evaluation: progress: [19.  22.9]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  4.275062184877144
      12  4.83e+00  2.14e+01  5.18e+01  2.71e+02    6.14e+01      0              
    geophys. misfits: 18.9 (target 30.0 [True]); 24.3 (target 30.0 [True]) | smallness misfit: 763.1 (target: 200.0 [False])
    Beta cooling evaluation: progress: [18.9 24.3]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  6.025467638072105
      13  4.83e+00  2.22e+01  5.44e+01  2.85e+02    7.35e+01      0              
    geophys. misfits: 19.1 (target 30.0 [True]); 25.7 (target 30.0 [True]) | smallness misfit: 664.1 (target: 200.0 [False])
    Beta cooling evaluation: progress: [19.1 25.7]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  8.246342999887883
      14  4.83e+00  2.31e+01  5.72e+01  2.99e+02    8.78e+01      0              
    geophys. misfits: 19.6 (target 30.0 [True]); 27.3 (target 30.0 [True]) | smallness misfit: 576.9 (target: 200.0 [False])
    Beta cooling evaluation: progress: [19.6 27.3]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  10.845170009066615
      15  4.83e+00  2.42e+01  5.99e+01  3.13e+02    7.86e+01      0              
    geophys. misfits: 20.4 (target 30.0 [True]); 29.4 (target 30.0 [True]) | smallness misfit: 499.5 (target: 200.0 [False])
    Beta cooling evaluation: progress: [20.4 29.4]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  13.520778151534024
      16  4.83e+00  2.58e+01  6.22e+01  3.26e+02    8.58e+01      0              
    geophys. misfits: 23.9 (target 30.0 [True]); 32.0 (target 30.0 [False]) | smallness misfit: 431.5 (target: 200.0 [False])
    Beta cooling evaluation: progress: [23.9 32. ]; minimum progress targets: [30. 30.]
    Decreasing beta to counter data misfit increase.
    Updating scaling for data misfits by  1.2538703163113525
    New scales: [0.34667266 0.65332734]
      17  2.41e+00  2.92e+01  6.12e+01  1.77e+02    9.15e+01      0              
    geophys. misfits: 20.5 (target 30.0 [True]); 24.1 (target 30.0 [True]) | smallness misfit: 469.7 (target: 200.0 [False])
    Beta cooling evaluation: progress: [20.5 24.1]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  18.305271408092842
      18  2.41e+00  2.29e+01  6.78e+01  1.86e+02    9.27e+01      0              
    geophys. misfits: 18.7 (target 30.0 [True]); 23.4 (target 30.0 [True]) | smallness misfit: 406.0 (target: 200.0 [False])
    Beta cooling evaluation: progress: [18.7 23.4]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  26.45274527700061
      19  2.41e+00  2.18e+01  7.49e+01  2.02e+02    8.41e+01      0              
    geophys. misfits: 18.2 (target 30.0 [True]); 22.6 (target 30.0 [True]) | smallness misfit: 366.8 (target: 200.0 [False])
    Beta cooling evaluation: progress: [18.2 22.6]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  39.40426027800066
      20  2.41e+00  2.11e+01  8.48e+01  2.26e+02    1.06e+02      0              
    geophys. misfits: 18.5 (target 30.0 [True]); 20.7 (target 30.0 [True]) | smallness misfit: 310.6 (target: 200.0 [False])
    Beta cooling evaluation: progress: [18.5 20.7]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  60.39686376205604
      21  2.41e+00  2.00e+01  9.86e+01  2.58e+02    1.13e+02      0              
    geophys. misfits: 19.5 (target 30.0 [True]); 23.3 (target 30.0 [True]) | smallness misfit: 285.6 (target: 200.0 [False])
    Beta cooling evaluation: progress: [19.5 23.3]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  85.46279449789299
      22  2.41e+00  2.20e+01  1.12e+02  2.93e+02    1.20e+02      0              
    geophys. misfits: 22.2 (target 30.0 [True]); 26.5 (target 30.0 [True]) | smallness misfit: 241.3 (target: 200.0 [False])
    Beta cooling evaluation: progress: [22.2 26.5]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  106.26970914234639
      23  2.41e+00  2.50e+01  1.22e+02  3.19e+02    1.21e+02      0              
    geophys. misfits: 19.9 (target 30.0 [True]); 23.9 (target 30.0 [True]) | smallness misfit: 234.4 (target: 200.0 [False])
    Beta cooling evaluation: progress: [19.9 23.9]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  146.8097476420638
      24  2.41e+00  2.25e+01  1.43e+02  3.67e+02    1.25e+02      0              
    geophys. misfits: 31.0 (target 30.0 [False]); 23.0 (target 30.0 [True]) | smallness misfit: 216.6 (target: 200.0 [False])
    Beta cooling evaluation: progress: [31. 23.]; minimum progress targets: [30. 30.]
    Decreasing beta to counter data misfit increase.
    Updating scaling for data misfits by  1.3056443761911123
    New scales: [0.40926598 0.59073402]
      25  1.21e+00  2.63e+01  1.38e+02  1.93e+02    1.20e+02      0              
    geophys. misfits: 17.8 (target 30.0 [True]); 26.7 (target 30.0 [True]) | smallness misfit: 195.6 (target: 200.0 [True])
    All targets have been reached
    Beta cooling evaluation: progress: [17.8 26.7]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  206.36580588566093
    ------------------------- STOP! -------------------------
    1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 3.0000e+04
    0 : |xc-x_last| = 8.2260e-01 <= tolX*(1+|x0|) = 1.0000e-06
    0 : |proj(x-g)-x|    = 1.1979e+02 <= tolG          = 1.0000e-01
    0 : |proj(x-g)-x|    = 1.1979e+02 <= 1e3*eps       = 1.0000e-02
    0 : maxIter   =      50    <= iter          =     26
    ------------------------- DONE! -------------------------
    SimPEG.InvProblem will set Regularization.reference_model to m0.
    SimPEG.InvProblem will set Regularization.reference_model to m0.
    SimPEG.InvProblem will set Regularization.reference_model to m0.

                        SimPEG.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.
                        ***Done using the default solver Pardiso and no solver_opts.***
                    
    Alpha scales: [0.00034499025026179766, 0.0, 3.7949084087632494e-06, 0.0]
    Calculating the scaling parameter.
    Scale Multipliers:  [0.09298509 0.90701491]
    <class 'SimPEG.regularization.pgi.PGIsmallness'>
    Initial data misfit scales:  [0.09298509 0.90701491]
    model has any nan: 0
    =============================== Projected GNCG ===============================
      #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   
    -----------------------------------------------------------------------------
    x0 has any nan: 0
       0  1.92e+03  3.00e+05  0.00e+00  3.00e+05    1.41e+02      0              
    geophys. misfits: 89802.0 (target 30.0 [False]); 62471.1 (target 30.0 [False]) | smallness misfit: 269.7 (target: 200.0 [False])
    Beta cooling evaluation: progress: [89802.  62471.1]; minimum progress targets: [240000. 240000.]
       1  1.92e+03  6.50e+04  6.55e-01  6.63e+04    9.25e+01      0              
    geophys. misfits: 654.8 (target 30.0 [False]); 20.6 (target 30.0 [True]) | smallness misfit: 89.9 (target: 200.0 [True])
    Beta cooling evaluation: progress: [654.8  20.6]; minimum progress targets: [71841.6 49976.9]
    Updating scaling for data misfits by  1.4577138405555077
    New scales: [0.13001225 0.86998775]
       2  1.92e+03  1.03e+02  2.45e-01  5.75e+02    1.03e+02      0   Skip BFGS  
    geophys. misfits: 78.0 (target 30.0 [False]); 18.9 (target 30.0 [True]) | smallness misfit: 55.7 (target: 200.0 [True])
    Beta cooling evaluation: progress: [78.  18.9]; minimum progress targets: [523.8  30. ]
    Updating scaling for data misfits by  1.5872808293086649
    New scales: [0.1917269 0.8082731]
       3  1.92e+03  3.02e+01  1.45e-01  3.09e+02    8.51e+01      0   Skip BFGS  
    geophys. misfits: 46.5 (target 30.0 [False]); 18.1 (target 30.0 [True]) | smallness misfit: 70.3 (target: 200.0 [True])
    Beta cooling evaluation: progress: [46.5 18.1]; minimum progress targets: [62.4 30. ]
    Updating scaling for data misfits by  1.652956583909816
    New scales: [0.28165592 0.71834408]
       4  1.92e+03  2.61e+01  1.87e-01  3.86e+02    7.95e+01      0              
    geophys. misfits: 31.8 (target 30.0 [False]); 19.0 (target 30.0 [True]) | smallness misfit: 47.4 (target: 200.0 [True])
    Beta cooling evaluation: progress: [31.8 19. ]; minimum progress targets: [37.2 30. ]
    Updating scaling for data misfits by  1.5803534409264133
    New scales: [0.38257947 0.61742053]
       5  1.92e+03  2.39e+01  1.29e-01  2.72e+02    7.69e+01      0              
    geophys. misfits: 25.3 (target 30.0 [True]); 19.9 (target 30.0 [True]) | smallness misfit: 47.7 (target: 200.0 [True])
    All targets have been reached
    Beta cooling evaluation: progress: [25.3 19.9]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  1.3449566670816129
    ------------------------- STOP! -------------------------
    1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 3.0000e+04
    0 : |xc-x_last| = 8.5682e-02 <= tolX*(1+|x0|) = 1.0000e-06
    0 : |proj(x-g)-x|    = 7.6846e+01 <= tolG          = 1.0000e-01
    0 : |proj(x-g)-x|    = 7.6846e+01 <= 1e3*eps       = 1.0000e-02
    0 : maxIter   =      50    <= iter          =      6
    ------------------------- DONE! -------------------------
    SimPEG.InvProblem will set Regularization.reference_model to m0.
    SimPEG.InvProblem will set Regularization.reference_model to m0.

                        SimPEG.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.
                        ***Done using the default solver Pardiso and no solver_opts.***
                    
    Alpha scales: [3.5188574849327586e-05, 0.0, 3.4826374354602616e-05, 0.0]
    Calculating the scaling parameter.
    Scale Multipliers:  [0.09298509 0.90701491]
    /home/ssoler/git/simpeg/SimPEG/directives/directives.py:332: UserWarning:

    There is no PGI regularization. Smallness target is turned off (TriggerSmall flag)

    Initial data misfit scales:  [0.09298509 0.90701491]
    model has any nan: 0
    =============================== Projected GNCG ===============================
      #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   
    -----------------------------------------------------------------------------
    x0 has any nan: 0
       0  1.04e+06  3.00e+05  0.00e+00  3.00e+05    1.41e+02      0              
    geophys. misfits: 58138.4 (target 30.0 [False]); 35947.8 (target 30.0 [False])
       1  2.09e+05  3.80e+04  4.27e-02  4.69e+04    1.38e+02      0              
    geophys. misfits: 8841.4 (target 30.0 [False]); 3900.3 (target 30.0 [False])
       2  4.17e+04  4.36e+03  1.07e-01  8.82e+03    1.30e+02      0   Skip BFGS  
    geophys. misfits: 597.5 (target 30.0 [False]); 260.5 (target 30.0 [False])
       3  8.34e+03  2.92e+02  1.41e-01  1.47e+03    1.02e+02      0   Skip BFGS  
    geophys. misfits: 44.4 (target 30.0 [False]); 35.6 (target 30.0 [False])
       4  1.67e+03  3.64e+01  1.52e-01  2.90e+02    7.92e+01      0   Skip BFGS  
    geophys. misfits: 17.8 (target 30.0 [True]); 17.5 (target 30.0 [True])
    All targets have been reached
    ------------------------- STOP! -------------------------
    1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 3.0000e+04
    0 : |xc-x_last| = 5.3686e-01 <= tolX*(1+|x0|) = 1.0000e-06
    0 : |proj(x-g)-x|    = 7.9182e+01 <= tolG          = 1.0000e-01
    0 : |proj(x-g)-x|    = 7.9182e+01 <= 1e3*eps       = 1.0000e-02
    0 : maxIter   =      50    <= iter          =      5
    ------------------------- DONE! -------------------------
    /home/ssoler/git/simpeg/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:301: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "b.-" (-> marker='.'). The keyword argument will take precedence.

    /home/ssoler/git/simpeg/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:308: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "r.-" (-> marker='.'). The keyword argument will take precedence.

    /home/ssoler/git/simpeg/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:346: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "b.-" (-> marker='.'). The keyword argument will take precedence.

    /home/ssoler/git/simpeg/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:353: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "r.-" (-> marker='.'). The keyword argument will take precedence.

    /home/ssoler/git/simpeg/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:360: UserWarning:

    The following kwargs were not used by contour: 'label'

    /home/ssoler/git/simpeg/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:368: UserWarning:

    The following kwargs were not used by contour: 'label'

    /home/ssoler/git/simpeg/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:402: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "b.-" (-> marker='.'). The keyword argument will take precedence.

    /home/ssoler/git/simpeg/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:409: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "r.-" (-> marker='.'). The keyword argument will take precedence.







|

.. code-block:: Python


    import discretize as Mesh
    import matplotlib.pyplot as plt
    import numpy as np
    from SimPEG import (
        data_misfit,
        directives,
        inverse_problem,
        inversion,
        maps,
        optimization,
        regularization,
        simulation,
        utils,
    )

    # Random seed for reproductibility
    np.random.seed(1)
    # Mesh
    N = 100
    mesh = Mesh.TensorMesh([N])

    # Survey design parameters
    nk = 30
    jk = np.linspace(1.0, 59.0, nk)
    p = -0.25
    q = 0.25


    # Physics
    def g(k):
        return np.exp(p * jk[k] * mesh.cell_centers_x) * np.cos(
            np.pi * q * jk[k] * mesh.cell_centers_x
        )


    G = np.empty((nk, mesh.nC))

    for i in range(nk):
        G[i, :] = g(i)

    m0 = np.zeros(mesh.nC)
    m0[20:41] = np.linspace(0.0, 1.0, 21)
    m0[41:57] = np.linspace(-1, 0.0, 16)

    poly0 = maps.PolynomialPetroClusterMap(coeffyx=np.r_[0.0, -4.0, 4.0])
    poly1 = maps.PolynomialPetroClusterMap(coeffyx=np.r_[-0.0, 3.0, 6.0, 6.0])
    poly0_inverse = maps.PolynomialPetroClusterMap(coeffyx=-np.r_[0.0, -4.0, 4.0])
    poly1_inverse = maps.PolynomialPetroClusterMap(coeffyx=-np.r_[0.0, 3.0, 6.0, 6.0])
    cluster_mapping = [maps.IdentityMap(), poly0_inverse, poly1_inverse]

    m1 = np.zeros(100)
    m1[20:41] = 1.0 + (poly0 * np.vstack([m0[20:41], m1[20:41]]).T)[:, 1]
    m1[41:57] = -1.0 + (poly1 * np.vstack([m0[41:57], m1[41:57]]).T)[:, 1]

    model2d = np.vstack([m0, m1]).T
    m = utils.mkvc(model2d)

    clfmapping = utils.GaussianMixtureWithNonlinearRelationships(
        mesh=mesh,
        n_components=3,
        covariance_type="full",
        tol=1e-8,
        reg_covar=1e-3,
        max_iter=1000,
        n_init=100,
        init_params="kmeans",
        random_state=None,
        warm_start=False,
        means_init=np.array(
            [
                [0, 0],
                [m0[20:41].mean(), m1[20:41].mean()],
                [m0[41:57].mean(), m1[41:57].mean()],
            ]
        ),
        verbose=0,
        verbose_interval=10,
        cluster_mapping=cluster_mapping,
    )
    clfmapping = clfmapping.fit(model2d)

    clfnomapping = utils.WeightedGaussianMixture(
        mesh=mesh,
        n_components=3,
        covariance_type="full",
        tol=1e-8,
        reg_covar=1e-3,
        max_iter=1000,
        n_init=100,
        init_params="kmeans",
        random_state=None,
        warm_start=False,
        verbose=0,
        verbose_interval=10,
    )
    clfnomapping = clfnomapping.fit(model2d)

    wires = maps.Wires(("m1", mesh.nC), ("m2", mesh.nC))

    relatrive_error = 0.01
    noise_floor = 0.0

    prob1 = simulation.LinearSimulation(mesh, G=G, model_map=wires.m1)
    survey1 = prob1.make_synthetic_data(
        m, relative_error=relatrive_error, noise_floor=noise_floor, add_noise=True
    )

    prob2 = simulation.LinearSimulation(mesh, G=G, model_map=wires.m2)
    survey2 = prob2.make_synthetic_data(
        m, relative_error=relatrive_error, noise_floor=noise_floor, add_noise=True
    )


    dmis1 = data_misfit.L2DataMisfit(simulation=prob1, data=survey1)
    dmis2 = data_misfit.L2DataMisfit(simulation=prob2, data=survey2)
    dmis = dmis1 + dmis2
    minit = np.zeros_like(m)

    # Distance weighting
    wr1 = np.sum(prob1.G**2.0, axis=0) ** 0.5 / mesh.cell_volumes
    wr1 = wr1 / np.max(wr1)
    wr2 = np.sum(prob2.G**2.0, axis=0) ** 0.5 / mesh.cell_volumes
    wr2 = wr2 / np.max(wr2)

    reg_simple = regularization.PGI(
        mesh=mesh,
        gmmref=clfmapping,
        gmm=clfmapping,
        approx_gradient=True,
        wiresmap=wires,
        non_linear_relationships=True,
        weights_list=[wr1, wr2],
    )

    opt = optimization.ProjectedGNCG(
        maxIter=50,
        tolX=1e-6,
        maxIterCG=100,
        tolCG=1e-3,
        lower=-10,
        upper=10,
    )

    invProb = inverse_problem.BaseInvProblem(dmis, reg_simple, opt)

    # directives
    scales = directives.ScalingMultipleDataMisfits_ByEig(
        chi0_ratio=np.r_[1.0, 1.0], verbose=True, n_pw_iter=10
    )
    scaling_schedule = directives.JointScalingSchedule(verbose=True)
    alpha0_ratio = np.r_[1e6, 1e4, 1, 1]
    alphas = directives.AlphasSmoothEstimate_ByEig(
        alpha0_ratio=alpha0_ratio, n_pw_iter=10, verbose=True
    )
    beta = directives.BetaEstimate_ByEig(beta0_ratio=1e-5, n_pw_iter=10)
    betaIt = directives.PGI_BetaAlphaSchedule(
        verbose=True,
        coolingFactor=2.0,
        progress=0.2,
    )
    targets = directives.MultiTargetMisfits(verbose=True)
    petrodir = directives.PGI_UpdateParameters(update_gmm=False)

    # Setup Inversion
    inv = inversion.BaseInversion(
        invProb,
        directiveList=[alphas, scales, beta, petrodir, targets, betaIt, scaling_schedule],
    )

    mcluster_map = inv.run(minit)

    # Inversion with no nonlinear mapping
    reg_simple_no_map = regularization.PGI(
        mesh=mesh,
        gmmref=clfnomapping,
        gmm=clfnomapping,
        approx_gradient=True,
        wiresmap=wires,
        non_linear_relationships=False,
        weights_list=[wr1, wr2],
    )

    opt = optimization.ProjectedGNCG(
        maxIter=50,
        tolX=1e-6,
        maxIterCG=100,
        tolCG=1e-3,
        lower=-10,
        upper=10,
    )

    invProb = inverse_problem.BaseInvProblem(dmis, reg_simple_no_map, opt)

    # directives
    scales = directives.ScalingMultipleDataMisfits_ByEig(
        chi0_ratio=np.r_[1.0, 1.0], verbose=True, n_pw_iter=10
    )
    scaling_schedule = directives.JointScalingSchedule(verbose=True)
    alpha0_ratio = np.r_[100.0 * np.ones(2), 1, 1]
    alphas = directives.AlphasSmoothEstimate_ByEig(
        alpha0_ratio=alpha0_ratio, n_pw_iter=10, verbose=True
    )
    beta = directives.BetaEstimate_ByEig(beta0_ratio=1e-5, n_pw_iter=10)
    betaIt = directives.PGI_BetaAlphaSchedule(
        verbose=True,
        coolingFactor=2.0,
        progress=0.2,
    )
    targets = directives.MultiTargetMisfits(
        chiSmall=1.0, TriggerSmall=True, TriggerTheta=False, verbose=True
    )
    petrodir = directives.PGI_UpdateParameters(update_gmm=False)

    # Setup Inversion
    inv = inversion.BaseInversion(
        invProb,
        directiveList=[alphas, scales, beta, petrodir, targets, betaIt, scaling_schedule],
    )

    mcluster_no_map = inv.run(minit)

    # WeightedLeastSquares Inversion

    reg1 = regularization.WeightedLeastSquares(
        mesh, alpha_s=1.0, alpha_x=1.0, mapping=wires.m1, weights={"cell_weights": wr1}
    )

    reg2 = regularization.WeightedLeastSquares(
        mesh, alpha_s=1.0, alpha_x=1.0, mapping=wires.m2, weights={"cell_weights": wr2}
    )

    reg = reg1 + reg2

    opt = optimization.ProjectedGNCG(
        maxIter=50,
        tolX=1e-6,
        maxIterCG=100,
        tolCG=1e-3,
        lower=-10,
        upper=10,
    )

    invProb = inverse_problem.BaseInvProblem(dmis, reg, opt)

    # directives
    alpha0_ratio = np.r_[1, 1, 1, 1]
    alphas = directives.AlphasSmoothEstimate_ByEig(
        alpha0_ratio=alpha0_ratio, n_pw_iter=10, verbose=True
    )
    scales = directives.ScalingMultipleDataMisfits_ByEig(
        chi0_ratio=np.r_[1.0, 1.0], verbose=True, n_pw_iter=10
    )
    scaling_schedule = directives.JointScalingSchedule(verbose=True)
    beta = directives.BetaEstimate_ByEig(beta0_ratio=1e-5, n_pw_iter=10)
    beta_schedule = directives.BetaSchedule(coolingFactor=5.0, coolingRate=1)
    targets = directives.MultiTargetMisfits(
        TriggerSmall=False,
        verbose=True,
    )

    # Setup Inversion
    inv = inversion.BaseInversion(
        invProb,
        directiveList=[alphas, scales, beta, targets, beta_schedule, scaling_schedule],
    )

    mtik = inv.run(minit)


    # Final Plot
    fig, axes = plt.subplots(3, 4, figsize=(25, 15))
    axes = axes.reshape(12)
    left, width = 0.25, 0.5
    bottom, height = 0.25, 0.5
    right = left + width
    top = bottom + height

    axes[0].set_axis_off()
    axes[0].text(
        0.5 * (left + right),
        0.5 * (bottom + top),
        ("Using true nonlinear\npetrophysical relationships"),
        horizontalalignment="center",
        verticalalignment="center",
        fontsize=20,
        color="black",
        transform=axes[0].transAxes,
    )

    axes[1].plot(mesh.cell_centers_x, wires.m1 * mcluster_map, "b.-", ms=5, marker="v")
    axes[1].plot(mesh.cell_centers_x, wires.m1 * m, "k--")
    axes[1].set_title("Problem 1")
    axes[1].legend(["Recovered Model", "True Model"], loc=1)
    axes[1].set_xlabel("X")
    axes[1].set_ylabel("Property 1")

    axes[2].plot(mesh.cell_centers_x, wires.m2 * mcluster_map, "r.-", ms=5, marker="v")
    axes[2].plot(mesh.cell_centers_x, wires.m2 * m, "k--")
    axes[2].set_title("Problem 2")
    axes[2].legend(["Recovered Model", "True Model"], loc=1)
    axes[2].set_xlabel("X")
    axes[2].set_ylabel("Property 2")

    x, y = np.mgrid[-1:1:0.01, -4:2:0.01]
    pos = np.empty(x.shape + (2,))
    pos[:, :, 0] = x
    pos[:, :, 1] = y
    CS = axes[3].contour(
        x,
        y,
        np.exp(clfmapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        100,
        alpha=0.25,
        cmap="viridis",
    )
    axes[3].scatter(wires.m1 * mcluster_map, wires.m2 * mcluster_map, marker="v")
    axes[3].set_title("Petrophysical Distribution")
    CS.collections[0].set_label("")
    axes[3].legend(["True Petrophysical Distribution", "Recovered model crossplot"])
    axes[3].set_xlabel("Property 1")
    axes[3].set_ylabel("Property 2")

    axes[4].set_axis_off()
    axes[4].text(
        0.5 * (left + right),
        0.5 * (bottom + top),
        ("Using a pure\nGaussian distribution"),
        horizontalalignment="center",
        verticalalignment="center",
        fontsize=20,
        color="black",
        transform=axes[4].transAxes,
    )

    axes[5].plot(mesh.cell_centers_x, wires.m1 * mcluster_no_map, "b.-", ms=5, marker="v")
    axes[5].plot(mesh.cell_centers_x, wires.m1 * m, "k--")
    axes[5].set_title("Problem 1")
    axes[5].legend(["Recovered Model", "True Model"], loc=1)
    axes[5].set_xlabel("X")
    axes[5].set_ylabel("Property 1")

    axes[6].plot(mesh.cell_centers_x, wires.m2 * mcluster_no_map, "r.-", ms=5, marker="v")
    axes[6].plot(mesh.cell_centers_x, wires.m2 * m, "k--")
    axes[6].set_title("Problem 2")
    axes[6].legend(["Recovered Model", "True Model"], loc=1)
    axes[6].set_xlabel("X")
    axes[6].set_ylabel("Property 2")

    CSF = axes[7].contour(
        x,
        y,
        np.exp(clfmapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        100,
        alpha=0.5,
        label="True Petro. Distribution",
    )
    CS = axes[7].contour(
        x,
        y,
        np.exp(clfnomapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        500,
        cmap="viridis",
        linestyles="--",
        label="Modeled Petro. Distribution",
    )
    axes[7].scatter(
        wires.m1 * mcluster_no_map,
        wires.m2 * mcluster_no_map,
        marker="v",
        label="Recovered model crossplot",
    )
    axes[7].set_title("Petrophysical Distribution")
    axes[7].legend()
    axes[7].set_xlabel("Property 1")
    axes[7].set_ylabel("Property 2")

    # Tikonov

    axes[8].set_axis_off()
    axes[8].text(
        0.5 * (left + right),
        0.5 * (bottom + top),
        ("Least-Squares\n~Using a single cluster"),
        horizontalalignment="center",
        verticalalignment="center",
        fontsize=20,
        color="black",
        transform=axes[8].transAxes,
    )

    axes[9].plot(mesh.cell_centers_x, wires.m1 * mtik, "b.-", ms=5, marker="v")
    axes[9].plot(mesh.cell_centers_x, wires.m1 * m, "k--")
    axes[9].set_title("Problem 1")
    axes[9].legend(["Recovered Model", "True Model"], loc=1)
    axes[9].set_xlabel("X")
    axes[9].set_ylabel("Property 1")

    axes[10].plot(mesh.cell_centers_x, wires.m2 * mtik, "r.-", ms=5, marker="v")
    axes[10].plot(mesh.cell_centers_x, wires.m2 * m, "k--")
    axes[10].set_title("Problem 2")
    axes[10].legend(["Recovered Model", "True Model"], loc=1)
    axes[10].set_xlabel("X")
    axes[10].set_ylabel("Property 2")

    CS = axes[11].contour(
        x,
        y,
        np.exp(clfmapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        100,
        alpha=0.25,
        cmap="viridis",
    )
    axes[11].scatter(wires.m1 * mtik, wires.m2 * mtik, marker="v")
    axes[11].set_title("Petro Distribution")
    CS.collections[0].set_label("")
    axes[11].legend(["True Petro Distribution", "Recovered model crossplot"])
    axes[11].set_xlabel("Property 1")
    axes[11].set_ylabel("Property 2")
    plt.subplots_adjust(wspace=0.3, hspace=0.3, top=0.85)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 37.303 seconds)

**Estimated memory usage:**  10 MB


.. _sphx_glr_download_content_examples_10-pgi_plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_inv_1_PGI_Linear_1D_joint_WithRelationships.ipynb <plot_inv_1_PGI_Linear_1D_joint_WithRelationships.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py <plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
